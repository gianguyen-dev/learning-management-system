Index: src/main/java/com/group1/MockProject/service/implementation/HomePageServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group1.MockProject.service.implementation;\r\n\r\nimport com.group1.MockProject.dto.response.*;\r\nimport com.group1.MockProject.entity.Category;\r\nimport com.group1.MockProject.entity.Course;\r\nimport com.group1.MockProject.entity.Student;\r\nimport com.group1.MockProject.entity.User;\r\nimport com.group1.MockProject.repository.*;\r\nimport com.group1.MockProject.service.HomePageService;\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.Collections;\r\nimport java.util.List;\r\nimport java.util.Optional;\r\nimport java.util.stream.Collectors;\r\n\r\n@Service\r\npublic class HomePageServiceImpl implements HomePageService {\r\n\r\n    private final UserRepository userRepository;\r\n    private StudentRepository studentRepository;\r\n    private InstructorRepository instructorRepository;\r\n    private CourseRepository courseRepository;\r\n    private CategoryRepository categoryRepository;\r\n    private CartRepository cartRepository;\r\n    private SubcriptionRepository subcriptionRepository;\r\n    private SavedCourseRepository savedCourseRepository;\r\n    private NotificationRepository notificationRepository;\r\n    private EnrollmentRepository enrollmentRepository;\r\n    private ModelMapper mapper;\r\n\r\n    public HomePageServiceImpl(StudentRepository studentRepository,\r\n                               InstructorRepository instructorRepository,\r\n                               CourseRepository courseRepository,\r\n                               CategoryRepository categoryRepository,\r\n                               CartRepository cartRepository,\r\n                               SubcriptionRepository subcriptionRepository,\r\n                               SavedCourseRepository savedCourseRepository,\r\n                               NotificationRepository notificationRepository,\r\n                               EnrollmentRepository enrollmentRepository,\r\n                               ModelMapper mapper, UserRepository userRepository) {\r\n\r\n        this.studentRepository = studentRepository;\r\n        this.instructorRepository = instructorRepository;\r\n        this.courseRepository = courseRepository;\r\n        this.categoryRepository = categoryRepository;\r\n        this.cartRepository = cartRepository;\r\n        this.subcriptionRepository = subcriptionRepository;\r\n        this.savedCourseRepository = savedCourseRepository;\r\n        this.notificationRepository = notificationRepository;\r\n        this.enrollmentRepository = enrollmentRepository;\r\n        this.mapper = mapper;\r\n        this.userRepository = userRepository;\r\n    }\r\n\r\n    @Override\r\n    public StudentHomePageDTO getHomePageForStudent(String email) {\r\n        // Create response\r\n        StudentHomePageDTO studentHomePageDTO = new StudentHomePageDTO();\r\n\r\n        User user = userRepository.findByEmail(email)\r\n                .orElseThrow(() -> new RuntimeException(\"Người dùng không tồn tại trong hệ thống\"));\r\n\r\n        Student student = user.getStudent();\r\n\r\n        // Get all courses and map to coursedtos\r\n        List<CourseDTO> courseDTOs = courseRepository.findAll()\r\n                .stream()\r\n                .map(course -> mapper.map(course,CourseDTO.class))\r\n                .toList();\r\n        studentHomePageDTO.setCourseDTOs(courseDTOs);\r\n\r\n        // Get all categories and map to categorydtos\r\n        List<CategoryDTO> categoryDTOs = categoryRepository.findAll()\r\n                .stream()\r\n                .map(category -> mapper.map(category,CategoryDTO.class))\r\n                .toList();\r\n        studentHomePageDTO.setCategoryDTOs(categoryDTOs);\r\n\r\n        // Get cart from student and map to dto\r\n        CartDTO cartDTOs = student.getCart() !=null ? mapper.map(student.getCart(),CartDTO.class)\r\n                : new CartDTO();\r\n        studentHomePageDTO.setCartDTOs(cartDTOs);\r\n\r\n        // Get Subcription from student and map to dto\r\n        List<SubcriptionDTO> subcriptionDTOs = student.getSubscriptions()!=null ? student.getSubscriptions()\r\n                .stream().map(sub -> mapper.map(sub,SubcriptionDTO.class))\r\n                .toList()\r\n                : new ArrayList<>();\r\n        studentHomePageDTO.setSubcriptionDTOs(subcriptionDTOs);\r\n\r\n        // Get saved course from student and map to dto\r\n        List<SavedCourseDTO> savedCourseDTOs = student.getSavedCourse() !=null ?\r\n                student.getSavedCourse()\r\n                .stream()\r\n                .map(savedCourse -> mapper.map(savedCourse, SavedCourseDTO.class))\r\n                .toList()\r\n                : new ArrayList<>();\r\n        studentHomePageDTO.setSavedCourseDTOs(savedCourseDTOs);\r\n\r\n        // Get notification from student and map to dto\r\n        List<NotificationDTO> notificationDTOs = student.getNotifications() != null ?\r\n                student.getNotifications().stream()\r\n                .map(notification -> mapper.map(notification,NotificationDTO.class))\r\n                .toList() : new ArrayList<>();\r\n        studentHomePageDTO.setNotificationDTOs(notificationDTOs);\r\n\r\n        // Get enrollment courses from student and map to dto\r\n        List<EnrollmentDTO> enrollmentDTOs = student.getEnrollments() !=null ? student.getEnrollments()\r\n                .stream()\r\n                .map(enrollment -> mapper.map(enrollment,EnrollmentDTO.class))\r\n                .toList()\r\n                : new ArrayList<>();\r\n        studentHomePageDTO.setEnrollmentDTOs(enrollmentDTOs);\r\n\r\n        return studentHomePageDTO;\r\n    }\r\n\r\n    @Override\r\n    public GuestHomePageDTO getHomePageForGuest() {\r\n        GuestHomePageDTO guestHomePageDTO = new GuestHomePageDTO();\r\n\r\n        // Get all courses and map to coursedtos\r\n        List<CourseDTO> courseDTOs = courseRepository.findAll()\r\n                .stream()\r\n                .map(course -> mapper.map(course,CourseDTO.class))\r\n                .toList();\r\n        guestHomePageDTO.setCourseDTOs(courseDTOs);\r\n\r\n        // Get all categories and map to categorydtos\r\n        List<CategoryDTO> categoryDTOs = categoryRepository.findAll()\r\n                .stream()\r\n                .map(category -> mapper.map(category,CategoryDTO.class))\r\n                .toList();\r\n        guestHomePageDTO.setCategoryDTOs(categoryDTOs);\r\n\r\n        return guestHomePageDTO;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group1/MockProject/service/implementation/HomePageServiceImpl.java b/src/main/java/com/group1/MockProject/service/implementation/HomePageServiceImpl.java
--- a/src/main/java/com/group1/MockProject/service/implementation/HomePageServiceImpl.java	(revision a73eb81443b4e17ece05e76c1c9eba9b53ae2e21)
+++ b/src/main/java/com/group1/MockProject/service/implementation/HomePageServiceImpl.java	(date 1735021351174)
@@ -127,14 +127,14 @@
                 .stream()
                 .map(course -> mapper.map(course,CourseDTO.class))
                 .toList();
-        guestHomePageDTO.setCourseDTOs(courseDTOs);
+        guestHomePageDTO.setCourses(courseDTOs);
 
         // Get all categories and map to categorydtos
         List<CategoryDTO> categoryDTOs = categoryRepository.findAll()
                 .stream()
                 .map(category -> mapper.map(category,CategoryDTO.class))
                 .toList();
-        guestHomePageDTO.setCategoryDTOs(categoryDTOs);
+        guestHomePageDTO.setCategories(categoryDTOs);
 
         return guestHomePageDTO;
     }
Index: src/main/java/com/group1/MockProject/dto/response/CategoryDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group1.MockProject.dto.response;\r\n\r\nimport com.group1.MockProject.entity.SubCategory;\r\nimport lombok.*;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n\r\n@Data\r\n@NoArgsConstructor\r\npublic class CategoryDTO {\r\n    private int id;\r\n    private String name;\r\n    private String description;\r\n   private List<SubCategoryDTO> subcategory = new ArrayList<>();\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group1/MockProject/dto/response/CategoryDTO.java b/src/main/java/com/group1/MockProject/dto/response/CategoryDTO.java
--- a/src/main/java/com/group1/MockProject/dto/response/CategoryDTO.java	(revision a73eb81443b4e17ece05e76c1c9eba9b53ae2e21)
+++ b/src/main/java/com/group1/MockProject/dto/response/CategoryDTO.java	(date 1735021351179)
@@ -7,7 +7,9 @@
 import java.util.List;
 
 
-@Data
+@Getter
+@Setter
+@AllArgsConstructor
 @NoArgsConstructor
 public class CategoryDTO {
     private int id;
Index: src/main/java/com/group1/MockProject/service/implementation/UserServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group1.MockProject.service.implementation;\r\n\r\nimport com.group1.MockProject.dto.request.UpdateProfileRequest;\r\nimport com.group1.MockProject.dto.response.UpdateProfileResponse;\r\nimport com.group1.MockProject.dto.response.UserInfoResponse;\r\nimport com.group1.MockProject.dto.request.UpdateProfileRequest;\r\nimport com.group1.MockProject.dto.response.UpdateProfileResponse;\r\nimport com.group1.MockProject.dto.response.UserInfoResponse;\r\nimport com.group1.MockProject.entity.User;\r\nimport com.group1.MockProject.repository.UserRepository;\r\nimport com.group1.MockProject.service.EmailService;\r\nimport com.group1.MockProject.utils.JwtUtil;\r\nimport com.group1.MockProject.service.UserService;\r\nimport io.jsonwebtoken.Claims;\r\nimport org.modelmapper.ModelMapper;\r\nimport org.springframework.stereotype.Service;\r\n\r\nimport java.util.Optional;\r\n\r\n@Service\r\npublic class UserServiceImpl implements UserService {\r\n    private final UserRepository userRepository;\r\n    private ModelMapper mapper;\r\n    private EmailService emailService;\r\n\r\n    public UserServiceImpl(UserRepository userRepository,\r\n                           ModelMapper mapper,\r\n                           EmailService emailService) {\r\n        this.userRepository = userRepository;\r\n        this.mapper = mapper;\r\n        this.emailService = emailService;\r\n    }\r\n\r\n    @Override\r\n    public void save(User user) {\r\n        userRepository.save(user);\r\n    }\r\n\r\n    @Override\r\n    public UserInfoResponse getUserInfoByToken(String token) {\r\n\r\n        String email = JwtUtil.extractEmail(token);\r\n\r\n        Optional<User> existedUser = userRepository.findByEmail(email);\r\n//        if (existedUser.isEmpty()) {\r\n//            throw new RuntimeException(\"Người dùng đã tồn tại trong hệ thống\");\r\n//        }\r\n\r\n        return mapper.map(existedUser, UserInfoResponse.class);\r\n    }\r\n\r\n\r\n    @Override\r\n    public UpdateProfileResponse requestProfileUpdate(String token, UpdateProfileRequest request) {\r\n        String email = JwtUtil.extractEmail(token);\r\n\r\n        User user =\r\n                userRepository\r\n                        .findByEmail(email)\r\n                        .orElseThrow(() -> new RuntimeException(\"User doesn't exist\"));\r\n\r\n        String updateUserToken = JwtUtil.generateUpdateUserToken(email,request);\r\n        String message =\r\n                String.format(\r\n                        \"Hello %s, \\n\\nUse the following token to reset your password:\\n%s\\n\\nThis token is valid for 15 minutes.\",\r\n                        user.getFullName(), updateUserToken);\r\n        String link = \"http://localhost:8080/api/v1/profile/confirm-update?token=\" + updateUserToken;\r\n\r\n        String title = \"Cập nhật thông tin cá nhân\";\r\n        String content = \"Vui lòng nhấn <blockquote style=\\\"Margin: 0 0 20px 0;border-left:10px solid #b1b4b6;padding:15px 0 0.1px 15px;font-size:19px;line-height:25px\\\"><a href=\\\"\" + link + \"\\\">vào đây.</a> để cập nhật thông tin cá nhân của bạn.</blockquote>\";\r\n\r\n        emailService.sendDetail(user.getEmail(),emailService.buildEmail(title,user.getEmail(), content) , \"Cập nhật thông tin cá nhân\");\r\n\r\n\r\n//        emailService.sendDetail(user.getEmail(),buildUpdateRequestEmail(user.getEmail(), link) , \"Cập nhật thông tin cá nhân\");\r\n        return new UpdateProfileResponse(message, link);\r\n    }\r\n\r\n    @Override\r\n    public UserInfoResponse updateUserInfo(String token) {\r\n\r\n        Claims claims = JwtUtil.decodeToken(token);\r\n\r\n        User user =\r\n                userRepository\r\n                        .findByEmail(claims.getSubject())\r\n                        .orElseThrow(() -> new RuntimeException(\"User doesn't exist\"));\r\n        user.setFullName(claims.get(\"fullName\", String.class));\r\n        user.setPhone(claims.get(\"phone\", String.class));\r\n        user.setAddress(claims.get(\"address\", String.class));\r\n\r\n        User updateUser = userRepository.save(user);\r\n\r\n        return mapper.map(updateUser, UserInfoResponse.class);\r\n    }\r\n\r\n//    private String buildUpdateRequestEmail(String name, String link) {\r\n//        return \"<div style=\\\"font-family:Helvetica,Arial,sans-serif;font-size:16px;margin:0;color:#0b0c0c\\\">\\n\"\r\n//                + \"\\n\"\r\n//                + \"<span style=\\\"display:none;font-size:1px;color:#fff;max-height:0\\\"></span>\\n\"\r\n//                + \"\\n\"\r\n//                + \"  <table role=\\\"presentation\\\" width=\\\"100%\\\" style=\\\"border-collapse:collapse;min-width:100%;width:100%!important\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\">\\n\"\r\n//                + \"    <tbody><tr>\\n\"\r\n//                + \"      <td width=\\\"100%\\\" height=\\\"53\\\" bgcolor=\\\"#0b0c0c\\\">\\n\"\r\n//                + \"        \\n\"\r\n//                + \"        <table role=\\\"presentation\\\" width=\\\"100%\\\" style=\\\"border-collapse:collapse;max-width:580px\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" align=\\\"center\\\">\\n\"\r\n//                + \"          <tbody><tr>\\n\"\r\n//                + \"            <td width=\\\"70\\\" bgcolor=\\\"#0b0c0c\\\" valign=\\\"middle\\\">\\n\"\r\n//                + \"                <table role=\\\"presentation\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" style=\\\"border-collapse:collapse\\\">\\n\"\r\n//                + \"                  <tbody><tr>\\n\"\r\n//                + \"                    <td style=\\\"padding-left:10px\\\">\\n\"\r\n//                + \"                  \\n\"\r\n//                + \"                    </td>\\n\"\r\n//                + \"                    <td style=\\\"font-size:28px;line-height:1.315789474;Margin-top:4px;padding-left:10px\\\">\\n\"\r\n//                + \"                      <span style=\\\"font-family:Helvetica,Arial,sans-serif;font-weight:700;color:#ffffff;text-decoration:none;vertical-align:top;display:inline-block\\\">Cập nhật thông tin cá nhân</span>\\n\"\r\n//                + \"                    </td>\\n\"\r\n//                + \"                  </tr>\\n\"\r\n//                + \"                </tbody></table>\\n\"\r\n//                + \"              </a>\\n\"\r\n//                + \"            </td>\\n\"\r\n//                + \"          </tr>\\n\"\r\n//                + \"        </tbody></table>\\n\"\r\n//                + \"        \\n\"\r\n//                + \"      </td>\\n\"\r\n//                + \"    </tr>\\n\"\r\n//                + \"  </tbody></table>\\n\"\r\n//                + \"  <table role=\\\"presentation\\\" class=\\\"m_-6186904992287805515content\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" style=\\\"border-collapse:collapse;max-width:580px;width:100%!important\\\" width=\\\"100%\\\">\\n\"\r\n//                + \"    <tbody><tr>\\n\"\r\n//                + \"      <td width=\\\"10\\\" height=\\\"10\\\" valign=\\\"middle\\\"></td>\\n\"\r\n//                + \"      <td>\\n\"\r\n//                + \"        \\n\"\r\n//                + \"                <table role=\\\"presentation\\\" width=\\\"100%\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" style=\\\"border-collapse:collapse\\\">\\n\"\r\n//                + \"                  <tbody><tr>\\n\"\r\n//                + \"                    <td bgcolor=\\\"#1D70B8\\\" width=\\\"100%\\\" height=\\\"10\\\"></td>\\n\"\r\n//                + \"                  </tr>\\n\"\r\n//                + \"                </tbody></table>\\n\"\r\n//                + \"        \\n\"\r\n//                + \"      </td>\\n\"\r\n//                + \"      <td width=\\\"10\\\" valign=\\\"middle\\\" height=\\\"10\\\"></td>\\n\"\r\n//                + \"    </tr>\\n\"\r\n//                + \"  </tbody></table>\\n\"\r\n//                + \"\\n\"\r\n//                + \"\\n\"\r\n//                + \"\\n\"\r\n//                + \"  <table role=\\\"presentation\\\" class=\\\"m_-6186904992287805515content\\\" align=\\\"center\\\" cellpadding=\\\"0\\\" cellspacing=\\\"0\\\" border=\\\"0\\\" style=\\\"border-collapse:collapse;max-width:580px;width:100%!important\\\" width=\\\"100%\\\">\\n\"\r\n//                + \"    <tbody><tr>\\n\"\r\n//                + \"      <td height=\\\"30\\\"><br></td>\\n\"\r\n//                + \"    </tr>\\n\"\r\n//                + \"    <tr>\\n\"\r\n//                + \"      <td width=\\\"10\\\" valign=\\\"middle\\\"><br></td>\\n\"\r\n//                + \"      <td style=\\\"font-family:Helvetica,Arial,sans-serif;font-size:19px;line-height:1.315789474;max-width:560px\\\">\\n\"\r\n//                + \"        \\n\"\r\n//                + \"            <p style=\\\"Margin:0 0 20px 0;font-size:19px;line-height:25px;color:#0b0c0c\\\">Dear \"\r\n//                + name\r\n//                + \",</p><p style=\\\"Margin:0 0 20px 0;font-size:19px;line-height:25px;color:#0b0c0c\\\"> Vui lòng nhấn  <blockquote style=\\\"Margin: 0 0 20px 0;border-left:10px solid #b1b4b6;padding:15px 0 0.1px 15px;font-size:19px;line-height:25px\\\"><a href=\\\"\"\r\n//                + link\r\n//                + \"\\\">vào đây</a> để cập nhật thông tin cá nhân của bạn.</blockquote>\"\r\n//                + \"        \\n\"\r\n//                + \"      </td>\\n\"\r\n//                + \"      <td width=\\\"10\\\" valign=\\\"middle\\\"><br></td>\\n\"\r\n//                + \"    </tr>\\n\"\r\n//                + \"    <tr>\\n\"\r\n//                + \"      <td height=\\\"30\\\"><br></td>\\n\"\r\n//                + \"    </tr>\\n\"\r\n//                + \"  </tbody></table><div class=\\\"yj6qo\\\"></div><div class=\\\"adL\\\">\\n\"\r\n//                + \"\\n\"\r\n//                + \"</div></div>\";\r\n//    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group1/MockProject/service/implementation/UserServiceImpl.java b/src/main/java/com/group1/MockProject/service/implementation/UserServiceImpl.java
--- a/src/main/java/com/group1/MockProject/service/implementation/UserServiceImpl.java	(revision a73eb81443b4e17ece05e76c1c9eba9b53ae2e21)
+++ b/src/main/java/com/group1/MockProject/service/implementation/UserServiceImpl.java	(date 1735021351158)
@@ -70,7 +70,10 @@
         String content = "Vui lòng nhấn <blockquote style=\"Margin: 0 0 20px 0;border-left:10px solid #b1b4b6;padding:15px 0 0.1px 15px;font-size:19px;line-height:25px\"><a href=\"" + link + "\">vào đây.</a> để cập nhật thông tin cá nhân của bạn.</blockquote>";
 
         emailService.sendDetail(user.getEmail(),emailService.buildEmail(title,user.getEmail(), content) , "Cập nhật thông tin cá nhân");
-
+        emailService.sendDetail(
+                user.getEmail(),
+                emailService.buildEmail(title, user.getEmail(), content),
+                "Cập nhật thông tin cá nhân");
 
 //        emailService.sendDetail(user.getEmail(),buildUpdateRequestEmail(user.getEmail(), link) , "Cập nhật thông tin cá nhân");
         return new UpdateProfileResponse(message, link);
Index: src/main/java/com/group1/MockProject/dto/response/GuestHomePageDTO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.group1.MockProject.dto.response;\r\n\r\nimport lombok.Data;\r\nimport lombok.NoArgsConstructor;\r\n\r\nimport java.util.List;\r\n\r\n@Data\r\n@NoArgsConstructor\r\npublic class GuestHomePageDTO {\r\n    private List<CourseDTO> courseDTOs;\r\n    private List<CategoryDTO> categoryDTOs;\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/group1/MockProject/dto/response/GuestHomePageDTO.java b/src/main/java/com/group1/MockProject/dto/response/GuestHomePageDTO.java
--- a/src/main/java/com/group1/MockProject/dto/response/GuestHomePageDTO.java	(revision a73eb81443b4e17ece05e76c1c9eba9b53ae2e21)
+++ b/src/main/java/com/group1/MockProject/dto/response/GuestHomePageDTO.java	(date 1735021351195)
@@ -3,11 +3,12 @@
 import lombok.Data;
 import lombok.NoArgsConstructor;
 
+import java.util.ArrayList;
 import java.util.List;
 
 @Data
 @NoArgsConstructor
 public class GuestHomePageDTO {
-    private List<CourseDTO> courseDTOs;
-    private List<CategoryDTO> categoryDTOs;
+    private List<CourseDTO> courses = new ArrayList<>();
+    private List<CategoryDTO> categories = new ArrayList<>();
 }
